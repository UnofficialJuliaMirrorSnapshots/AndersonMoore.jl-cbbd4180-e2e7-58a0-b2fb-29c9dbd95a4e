image: Visual Studio 2017
#C:\msys64\mingw64\bin
environment:
#  C_MAKE_PROGRAM: C:\MinGW\bin\make
#  CMAKE_MAKE_PROGRAM: C:\MinGW\bin\make
#  CMAKE_Fortran_COMPILER: C:\MinGW\bin\gfortran.exe
  MINGW_DIR: C:\mingw-w64\x86_64-7.2.0-posix-seh-rt_v5-rev1\mingw64\bin
  Path: C:\Python34-x64\;%MINGW_DIR%;%Path%
  matrix:
    -
      CMAKE_BUILD: MinGW
      STATIC_LIBS: false
      CC: "%MINGW_DIR%\\gcc.exe"
      CXX: "%MINGW_DIR%\\g++.exe"
      FC: "%MINGW_DIR%\\gfortran.exe"
      CMAKE_Fortran_COMPILER: "%MINGW_DIR%\\gfortran.exe"
      TMP_PATH: "C:\\Program Files (x86)\\CMake\\bin;C:\\Python34-x64;%MINGW_DIR%;C:\\Program Files\\Git\\cmd;C:\\msys64;C:\\Program Files\\Git\\usr\\bin"
      julia_version: 1

  # - julia_version: nightly




platform:
#  - x86 # 32-bit
  - x64 # 64-bit

# # Uncomment the following lines to allow failures on nightly julia
# # (tests will run but not make your overall status red)
matrix:
  allow_failures:
  - julia_version: nightly

branches:
  only:
    - develop
    - /release-.*/

notifications:
  - provider: Email
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: false

install:
  - ps: iex ((new-object net.webclient).DownloadString("https://raw.githubusercontent.com/JuliaCI/Appveyor.jl/version-1/bin/install.ps1"))

build_script:
  - echo "%JL_BUILD_SCRIPT%"
  - C:\julia\bin\julia -e "using InteractiveUtils;versioninfo(); if VERSION >= v\"0.7.0-\" using Pkg;Pkg.add(\"AndersonMoore\");Pkg.clone(\"https://github.com/es335mathwiz/AndersonMoore.jl.git\") else Pkg.add(\"AndersonMoore\");  end; Pkg.build(\"AndersonMoore\")"

test_script:
  - call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars32.bat"
  - echo "%C_MAKE_PROGRAM%"
  - echo "%CMAKE_MAKE_PROGRAM%"
  - echo "%JL_TEST_SCRIPT%"
  - C:\julia\bin\julia -e "%JL_TEST_SCRIPT%"

# # Uncomment to support code coverage upload. Should only be enabled for packages
# # which would have coverage gaps without running on Windows
# on_success:
#   - echo "%JL_CODECOV_SCRIPT%"
#   - C:\julia\bin\julia -e "%JL_CODECOV_SCRIPT%"

